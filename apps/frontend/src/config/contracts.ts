// BrickVault Contract Configuration
// Auto-generated by deployment script - DO NOT EDIT MANUALLY

export const CONTRACT_ADDRESSES = {
  // Infrastructure
  EnvironmentConfig: process.env.NEXT_PUBLIC_ENVIRONMENT_CONFIG_ADDRESS as `0x${string}`,
  HubEndpoint: process.env.NEXT_PUBLIC_HUB_ENDPOINT_ADDRESS as `0x${string}`,
  SpokeEndpoint: process.env.NEXT_PUBLIC_SPOKE_ENDPOINT_ADDRESS as `0x${string}`,
  
  // Tokens (Unified Adapter Architecture)
  MockUSDCHub: process.env.NEXT_PUBLIC_MOCK_USDC_HUB_ADDRESS as `0x${string}`,
  MockUSDCSpoke: process.env.NEXT_PUBLIC_MOCK_USDC_SPOKE_ADDRESS as `0x${string}`,
  USDCOFTAdapterHub: process.env.NEXT_PUBLIC_USDC_OFT_ADAPTER_HUB_ADDRESS as `0x${string}`,
  USDCOFTAdapterSpoke: process.env.NEXT_PUBLIC_USDC_OFT_ADAPTER_SPOKE_ADDRESS as `0x${string}`,
  OFTUSDC: process.env.NEXT_PUBLIC_OFT_USDC_ADDRESS as `0x${string}`,
  
  // Property Platform
  VaultFactory: process.env.NEXT_PUBLIC_VAULT_FACTORY_ADDRESS as `0x${string}`,
  PropertyDAOFactory: process.env.NEXT_PUBLIC_PROPERTY_DAO_FACTORY_ADDRESS as `0x${string}`,
  PropertyRegistry: process.env.NEXT_PUBLIC_PROPERTY_REGISTRY_ADDRESS as `0x${string}`,
  PropertyVault: process.env.NEXT_PUBLIC_PROPERTY_VAULT_ADDRESS as `0x${string}`,
  PropertyDAO: process.env.NEXT_PUBLIC_PROPERTY_DAO_ADDRESS as `0x${string}`,
  
  // Cross-Chain
  StacksCrossChainManager: process.env.NEXT_PUBLIC_STACKS_CROSS_CHAIN_MANAGER_ADDRESS as `0x${string}`,
} as const;

export const TOKEN_DECIMALS = {
  USDC: 6,
  OFTUSDC: 18,
  VAULT_SHARES: 18,
} as const;

export const NETWORK_CONFIG = {
  name: process.env.NEXT_PUBLIC_NETWORK_NAME || 'localhost',
  chainId: parseInt(process.env.NEXT_PUBLIC_CHAIN_ID || '31337'),
  rpcUrl: process.env.NEXT_PUBLIC_RPC_URL || 'http://localhost:8545',
} as const;

export const LAYERZERO_CONFIG = {
  hubEID: parseInt(process.env.NEXT_PUBLIC_LAYERZERO_HUB_EID || '1'), // Hub chain (Sepolia - PropertyVault)
  spokeEID: parseInt(process.env.NEXT_PUBLIC_LAYERZERO_SPOKE_EID || '2'), // Spoke chain (Arbitrum/Optimism)
  hubEndpoint: CONTRACT_ADDRESSES.HubEndpoint,
  spokeEndpoint: CONTRACT_ADDRESSES.SpokeEndpoint,
} as const;

export const PROPERTY_CONFIG = {
  fundingTarget: process.env.NEXT_PUBLIC_FUNDING_TARGET || '0',
  vaultDepositCap: process.env.NEXT_PUBLIC_VAULT_DEPOSIT_CAP || '0',
} as const;
